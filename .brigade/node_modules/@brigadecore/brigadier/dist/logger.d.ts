/**
 * Provides logging services for a script.
 *
 * Access the logger through the global `logger` object.
 *
 * NOTE: In a local test environment, the logger writes to the normal JavaScript
 * console. In the real Brigade runtime environment, a levelled logger is
 * used which responds appropriately to the configured level.
 */
export declare class Logger {
    /**
     * Logs a message at Debug level.
     * @param message The message to log
     * @param meta Values to replace any substitution strings in `message`
     */
    debug(message: string, ...meta: any[]): Logger;
    /**
     * Logs a message at Information level.
     * @param message The message to log
     * @param meta Values to replace any substitution strings in `message`
     */
    info(message: string, ...meta: any[]): Logger;
    /**
     * Logs a message at Warning level.
     * @param message The message to log
     * @param meta Values to replace any substitution strings in `message`
     */
    warn(message: string, ...meta: any[]): Logger;
    /**
     * Logs a message at Error level.
     * @param message The message to log
     * @param meta Values to replace any substitution strings in `message`
     */
    error(message: string, ...meta: any[]): Logger;
}
/** Provides logging for a script. */
export declare const logger: Logger;
